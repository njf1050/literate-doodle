{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","console","log","type","transactions","filter","transaction","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","parseFloat","htmlFor","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b9a73e4.chunk.js","sourcesContent":["export default function Header() {\r\n  return <h1>Expense Tracker</h1>;\r\n}\r\n","export default function AppReducer(state, action) {\r\n  console.log(\"entered reducer \");\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [...state.transactions, action.payload],\r\n      };\r\n\r\n    default:\r\n      console.log(\"default case in reducer\");\r\n      return state;\r\n  }\r\n}\r\n","import { useReducer, createContext } from \"react\";\r\nimport AppReducer from \"./AppReducer.js\";\r\nconst initialState = {\r\n  transactions: [\r\n    { id: 1, text: \"Flower\", amount: -20 },\r\n    { id: 2, text: \"Salary\", amount: 300 },\r\n    { id: 3, text: \"Book\", amount: -10 },\r\n    { id: 4, text: \"Camera\", amount: 150 },\r\n  ],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport default function GlobalProvider({ children }) {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  // actions\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const addTransaction = (transaction) => {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState.js\";\r\n\r\nexport default function Balance() {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1>${total}</h1>\r\n    </>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState.js\";\r\n\r\nexport default function IncomeExpenses() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>Income</h4>\r\n          <p className=\"money plus\">+{income}</p>\r\n        </div>\r\n        <div>\r\n          <h4>Expense</h4>\r\n          <p className=\"money minus\">-{expense}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { GlobalContext } from \"../context/GlobalState\";\r\nimport { useContext } from \"react\";\r\n\r\nexport function Transaction({ transaction }) {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n  return (\r\n    <li className={sign === \"-\" ? \"minus\" : \"plus\"}>\r\n      {transaction.text}\r\n      <span>\r\n        {sign}${Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        className=\"delete-btn\"\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { Transaction } from \"./Transaction.js\";\r\n\r\nexport default function TransactionList() {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  return (\r\n    <>\r\n      <h3>History</h3>\r\n      <ul className=\"list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} transaction={transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function AddTransaction() {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 1000000000),\r\n      text,\r\n      amount: parseFloat(amount),\r\n    };\r\n    addTransaction(newTransaction);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount <br />\r\n            (negative - expense, positive - income)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">Add transaction</button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Header from \"./components/Header.js\";\r\nimport Balance from \"./components/Balance.js\";\r\nimport IncomeExpenses from \"./components/IncomeExpenses.js\";\r\nimport TransactionList from \"./components/TransactionList.js\";\r\nimport AddTransaction from \"./components/AddTransaction.js\";\r\nimport GlobalProvider from \"./context/GlobalState.js\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <Header />\r\n      <div className=\"container\">\r\n      <Balance />\r\n        <IncomeExpenses />\r\n        <TransactionList />\r\n        <AddTransaction />\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}